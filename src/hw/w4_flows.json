[
    {
        "id": "4b33faa0a3fa1858",
        "type": "tab",
        "label": "w4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a73f8024e0cde09a",
        "type": "inject",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "d6fb5fa84a6c2438"
            ]
        ]
    },
    {
        "id": "6f9e367782be0adb",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "Exercise 4-1",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "d6fb5fa84a6c2438",
        "type": "function",
        "z": "4b33faa0a3fa1858",
        "name": "request url",
        "func": "msg.url = \"https://fornodered-312ce-default-rtdb.firebaseio.com/fireblog.json\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 120,
        "wires": [
            [
                "d17498db68982057"
            ]
        ]
    },
    {
        "id": "d17498db68982057",
        "type": "http request",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "0b13bdba98185e08",
                "f163467b3999c277"
            ]
        ]
    },
    {
        "id": "0b13bdba98185e08",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "f163467b3999c277",
        "type": "function",
        "z": "4b33faa0a3fa1858",
        "name": "get key",
        "func": "var result = msg.payload;\nvar obj = JSON.parse(result);\nmsg.payload = Object.keys(obj);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 160,
        "wires": [
            [
                "ee125addf445d38b"
            ]
        ]
    },
    {
        "id": "ee125addf445d38b",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 160,
        "wires": []
    },
    {
        "id": "0d7e134d42e96440",
        "type": "inject",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "e3a6870ef963c1d2"
            ]
        ]
    },
    {
        "id": "1151a4c3d1b778f4",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "Exercise 4-2",
        "info": "",
        "x": 110,
        "y": 240,
        "wires": []
    },
    {
        "id": "e3a6870ef963c1d2",
        "type": "function",
        "z": "4b33faa0a3fa1858",
        "name": "request url",
        "func": "msg.url = \"https://fornodered-312ce-default-rtdb.firebaseio.com/fireblog.json\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 300,
        "wires": [
            [
                "7df703ad986ae952"
            ]
        ]
    },
    {
        "id": "7df703ad986ae952",
        "type": "http request",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "d3e2e7ce5b872adc",
                "f169ccaa0f06202f"
            ]
        ]
    },
    {
        "id": "d3e2e7ce5b872adc",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 260,
        "wires": []
    },
    {
        "id": "f169ccaa0f06202f",
        "type": "function",
        "z": "4b33faa0a3fa1858",
        "name": "get value",
        "func": "var result = msg.payload;\nvar obj = JSON.parse(result);\nmsg.payload = Object.values(obj);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 340,
        "wires": [
            [
                "eb1d2c02c5701d44"
            ]
        ]
    },
    {
        "id": "eb1d2c02c5701d44",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 340,
        "wires": []
    },
    {
        "id": "ab21b74b3eb3df3d",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "Exercise 4-3",
        "info": "",
        "x": 110,
        "y": 460,
        "wires": []
    },
    {
        "id": "d42f4c8f.2bd0b",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 490,
        "y": 940,
        "wires": []
    },
    {
        "id": "26e83f77.d917c",
        "type": "catch",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "x": 344,
        "y": 940,
        "wires": [
            [
                "d42f4c8f.2bd0b"
            ]
        ]
    },
    {
        "id": "621022ff.9defdc",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 970,
        "y": 760,
        "wires": []
    },
    {
        "id": "8d94ee64.726b1",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "firebase.once() example flow",
        "info": "This flow is the same as the\nfirebase.on() example flow, \nexcept that it uses \nfirebase.once(\"value\") to query Firebase\nin the middle of a flow and return a \nresponse synchronously (as opposed to \nstarting a flow whenever the firebase.on()\nevent is triggered).\n\n\nThe inject node begins the flow\nevery 5 seconds and the debug node logs \nthe weather in San Francisco, CA.",
        "x": 220,
        "y": 720,
        "wires": []
    },
    {
        "id": "68921ac1.976de4",
        "type": "firebase.once",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "firebaseconfig": "",
        "childpath": "sanfrancisco",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 600,
        "y": 760,
        "wires": [
            [
                "621022ff.9defdc"
            ]
        ]
    },
    {
        "id": "1af0fa3.fe50f06",
        "type": "inject",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "68921ac1.976de4"
            ]
        ]
    },
    {
        "id": "aff728f3.5008d8",
        "type": "firebase modify",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "firebaseconfig": "",
        "childpath": "myHomeTown",
        "method": "set",
        "value": "msg.payload",
        "priority": "",
        "x": 781,
        "y": 886,
        "wires": [
            []
        ]
    },
    {
        "id": "2698847d.d9677c",
        "type": "inject",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 238,
        "y": 886,
        "wires": [
            [
                "55b9be5e.aa464"
            ]
        ]
    },
    {
        "id": "55b9be5e.aa464",
        "type": "change",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "my weather station data...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 417,
        "y": 886,
        "wires": [
            [
                "aff728f3.5008d8"
            ]
        ]
    },
    {
        "id": "761c3f4a.89e3c",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "firebase modify example flow",
        "info": "This flow attempts to set data at the \nfirebase location.  \n\nUnfortunately, the open data set firebase\nwe are using has security rules in place\nand we are unauthorized!  \n\nThe set node will fail and generate a \nNode-Red error.  The catch node will \nreceive the message that caused this \nerror and log it to the debug tab.\n\nThis flow is fired once at Deploy time\nand when Node-Red is first started up.\nYou can also click the button on the \ninject node to fire it whenever you like.",
        "x": 220,
        "y": 840,
        "wires": []
    },
    {
        "id": "7f9d00bd.8063",
        "type": "firebase.on",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "firebaseconfig": "",
        "childpath": "/nashville",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 400,
        "y": 640,
        "wires": [
            [
                "e3f4c139.1c0b4"
            ]
        ]
    },
    {
        "id": "e3f4c139.1c0b4",
        "type": "debug",
        "z": "4b33faa0a3fa1858",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 750,
        "y": 640,
        "wires": []
    },
    {
        "id": "cdf350cb.320cb",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "firebase.on() example flow",
        "info": "This flow provides a simple example which\nconnects to the firebase \n[weather](https://publicdata-weather.firebaseio.com/)\n[open data set](https://www.firebase.com/docs/open-data/).\n\nFirebase.on(\"value\") events are fired\nwhenever the weather changes in \nNashville, TN and sent to the debug node.\n\nYou can view the data in the debug tab\nto the right.",
        "x": 210,
        "y": 600,
        "wires": []
    },
    {
        "id": "2f20c042.d0df4",
        "type": "comment",
        "z": "4b33faa0a3fa1858",
        "name": "-------------------CLICK ME AND READ THE INFO PANE-------------------",
        "info": "Before clicking the Deploy button,\nYou need to configure login credentials \nfor each node with a Red Triangle (all of \nthe Firebase nodes)\n\nYou can add new credentials by double \nclicking on any firebase node and \nclicking on the pencil icon in the top \nright corner of the edit dialog box. \nOnce you have created a set of credentials\nthey will be available in the drop down\nbox.\n\nFor this example, you will want to set\nFirebase to \"publicdata-weather\" \n(without the quotes) and Auth Type to \nNone.",
        "x": 358.5,
        "y": 531,
        "wires": []
    }
]